<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Blog/BlogPost.cs" timestamp="1564458652958" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Catalog/Category.cs" timestamp="1564458352507" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Selz.Core.Domains.Shops.csproj" timestamp="1564458792034" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Pages/ContentBlock.cs" timestamp="1564458002246" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Settings/ISiteSettings.cs" timestamp="1564449681607" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Pages/Page.cs" timestamp="1564460164503">
        <mark key="[" line="66" column="0" />
        <mark key="]" line="66" column="0" />
        <mark key="." line="66" column="0" />
      </file>
      <file name="C:/dev/git/selz/drachma/src/Drachma.Web/Models/ThemeDrop/ProductDrop.cs" timestamp="1564453238195" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Filters/SelzLiquidFilter.cs" timestamp="1564449814940" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Domains/Pages/ContentBlock.cs" timestamp="1564456955464" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Services/Tagging/TaggingService.cs" timestamp="1564448223859" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Shipping/ShippingParcel.cs" timestamp="1564457895560" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Catalog/DownloadFile.cs" timestamp="1564457517698" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Blogs/BlogPost.cs" timestamp="1564459960311" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Constants.cs" timestamp="1564460061015" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Extensions/StringExtensions.cs" timestamp="1564459924979" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Catalog/Extensions/StringExtensions.cs" timestamp="1564456844633" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Images/Image.cs" timestamp="1564458936874" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Domains/Blog/BlogPost.cs" timestamp="1564456912369" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Pages/ContentBlockType.cs" timestamp="1564457128588" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Extensions/ImagePathExtension.cs" timestamp="1564457040371" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Domains/Pages/PageContentExtensions.cs" timestamp="1564457190351" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Tagging/Tag.cs" timestamp="1564457864786" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Extensions/StringExtensions.cs" timestamp="1564459888765">
        <mark key="[" line="29" column="0" />
      </file>
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Pages/Page.cs" timestamp="1564458111022" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Pages/ContentBlockGroup.cs" timestamp="1564458020619" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Blog/BlogPost.cs" timestamp="1564458468813" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" timestamp="1564449700008" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Domains/Products/Image.cs" timestamp="1564457911278" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Domains/Pages/Page.cs" timestamp="1564460197833" />
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Constants.cs" timestamp="1564460152094">
        <mark key="[" line="6" column="6" />
        <mark key="]" line="6" column="6" />
        <mark key="." line="6" column="6" />
      </file>
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Search/SearchDependencyFactory.cs" timestamp="1564449527974" />
    </filemarks>
    <jumps>
      <jump line="382" column="30" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Controllers/BaseController.cs" />
      <jump line="249" column="33" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Extensions/S3Extension.cs" />
      <jump line="39" column="60" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Extensions/SelzSecretManagerExtensions.cs" />
      <jump line="114" column="16" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Controllers/BlogPostsController.cs" />
      <jump line="72" column="8" filename="C:/dev/git/selz/Services.Contact/Service/src/Api/Selz.Contacts.Api/Controllers/ContactsController.cs" />
      <jump line="92" column="29" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Controllers/PagesController.cs" />
      <jump line="127" column="25" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Controllers/PagesController.cs" />
      <jump line="132" column="30" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Controllers/PagesController.cs" />
      <jump line="28" column="7" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IPageApi.cs" />
      <jump line="34" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IPageApi.cs" />
      <jump line="7" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IPageApi.cs" />
      <jump line="0" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IPageApi.cs" />
      <jump line="95" column="44" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Tagging/TaggingService.cs" />
      <jump line="16" column="35" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Blog/IBlogService.cs" />
      <jump line="71" column="83" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Contracts/DataAnnotation/RequiredIfAttribute.cs" />
      <jump line="169" column="45" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/366F296F-670D-4283-BC11-860CD6D4BAEC/db/087fefce/AbstractValidator`1.cs" />
      <jump line="32" column="32" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Validators/BlogPostValidator.cs" />
      <jump line="15" column="48" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Contracts/BlogPosts/BlogPostRequest.cs" />
      <jump line="55" column="30" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/5ACA63E1-5879-4E37-A863-9E1D55811905/d8/bc779c17/FluentValidationMvcExtensions.cs" />
      <jump line="40" column="24" filename="$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/7377099D-91F7-42A7-BB89-6982E405EFBF/1/Log.cs" />
      <jump line="28" column="27" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/EditableRegion.cs" />
      <jump line="63" column="23" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/B095A56F-3BE0-40CD-8205-081672035163/18/a9845b13/FluidGrammar.cs" />
      <jump line="389" column="134" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="179" column="20" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="181" column="30" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="183" column="41" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="197" column="24" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="182" column="24" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="189" column="37" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="229" column="50" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/Tags/BlockBase.cs" />
      <jump line="348" column="11" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/B182083D-5048-4347-8DAC-3F04C9E7EB7F/c3/e1575b7b/HtmlSanitizer.cs" />
      <jump line="10" column="29" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Validators/PageValidator.cs" />
      <jump line="194" column="15" filename="$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/7208242E-8171-474E-A12D-B9D506D0C43F/6/Attributes.cs" />
      <jump line="144" column="22" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Controllers/PageContentsController.cs" />
      <jump line="23" column="76" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/PageContents/PageContentsDataFactory.cs" />
      <jump line="248" column="17" filename="$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/7208242E-8171-474E-A12D-B9D506D0C43F/6/Attributes.cs" />
      <jump line="54" column="15" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/Pages/PagesScenarios.cs" />
      <jump line="14" column="35" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/ITagsApi.cs" />
      <jump line="1695" column="39" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/52D57F27-21D6-403B-B269-6DF28E1EBA0A/7f/21251757/Enumerable.cs" />
      <jump line="14" column="16" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Tags/TagService.cs" />
      <jump line="2" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Tags/TagService.cs" />
      <jump line="62" column="56" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Tags/TagService.cs" />
      <jump line="77" column="16" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.UnitTests/Taggings/TaggingServiceTest.cs" />
      <jump line="78" column="12" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.UnitTests/Taggings/TaggingServiceTest.cs" />
      <jump line="31" column="42" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.UnitTests/Taggings/TaggingServiceTest.cs" />
      <jump line="523" column="52" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Ajax/Controllers/GoogleCampaignController.cs" />
      <jump line="14" column="17" filename="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Search/SearchDependencyFactory.cs" />
      <jump line="19" column="30" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IShopsApi.cs" />
      <jump line="43" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/BlogPosts/BlogPostScenarios.cs" />
      <jump line="121" column="7" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/Base/DataFixture.cs" />
      <jump line="125" column="26" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/Base/DataFixture.cs" />
      <jump line="54" column="15" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/Base/DataFixture.cs" />
      <jump line="35" column="15" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/Base/DataFixture.cs" />
      <jump line="67" column="12" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Controllers/TagsController.cs" />
      <jump line="39" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IPageContentApi.cs" />
      <jump line="30" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IBlogPostsApi.cs" />
      <jump line="9" column="70" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IPageContentApi.cs" />
      <jump line="27" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Client/IPageApi.cs" />
      <jump line="137" column="46" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Themes/ThemingService.cs" />
      <jump line="21" column="17" filename="$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/523208DF-A789-4126-9282-D4D8C2E1CFAC/13/ApiVersionAttribute.cs" />
      <jump line="119" column="8" filename="C:/dev/git/selz/Services.Sample/Service/src/Api/Selz.Sample.Api/Mappings/ItemMappings.cs" />
      <jump line="121" column="9" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Blog/BlogService.cs" />
      <jump line="14" column="76" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Mappings/BlogPosts/BlogPostSearchMapper.cs" />
      <jump line="109" column="45" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Core/Services/Pages/PageService.cs" />
      <jump line="40" column="69" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.UnitTests/Pages/PageServiceTest.cs" />
      <jump line="94" column="24" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/3F19B331-4C9B-4A59-9058-21B431A7B7C9/8e/7248c247/MongoRepository`2.cs" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/scratches/buffer1.txt" />
      <jump line="70" column="4" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Controllers/BaseController.cs" />
      <jump line="52" column="62" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Controllers/BaseController.cs" />
      <jump line="97" column="8" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="101" column="12" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="108" column="12" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="98" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="100" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="107" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="109" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="112" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="118" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="124" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="73" column="8" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Areas/Shop/Controllers/ShopBaseController.cs" />
      <jump line="2128" column="16" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="1182" column="8" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="228" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="184" column="22" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="654" column="11" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="222" column="12" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="1148" column="27" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="271" column="38" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="1059" column="76" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="351" column="115" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Controllers/ShopBaseController.cs" />
      <jump line="152" column="26" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Services/Theming/ThemeRenderer.cs" />
      <jump line="1272" column="46" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Services/Theming/ThemeRenderer.cs" />
      <jump line="184" column="26" filename="C:/dev/git/selz/UI.Shop/src/Selz.Shop.Core/GoogleWrappers/IGoogleWebFonts.cs" />
      <jump line="771" column="30" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Services/Theming/ThemeRenderer.cs" />
      <jump line="809" column="81" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Services/Theming/ThemeRenderer.cs" />
      <jump line="1040" column="189" filename="C:/dev/git/selz/drachma/src/Drachma.Web/Core/Services/Theming/ThemeRenderer.cs" />
      <jump line="53" column="23" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/CD244751-0325-4121-9FE0-724DAFC7E191/99/ca4000dd/ControllerBase.cs" />
      <jump line="28" column="8" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Controllers/ShopService.cs" />
      <jump line="0" column="0" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Controllers/ShopService.cs" />
      <jump line="233" column="90" filename="C:/dev/git/selz/UI.Shop/src/Selz.UI.Shop/Services/Theming/ThemeRenderer.cs" />
    </jumps>
    <registers>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgeyAiYXJlYSIsIGFyZWE/LlRvTG93ZXIoKSB9Cg==</text>
      </register>
      <register name="1" type="4">
        <text encoding="base64">ICBwdWJsaWMgc3RhdGljIGNsYXNzIFBhZ2VzCiAgICAgICAgewogICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIEJsb2dQYWdlUGF0aFByZWZpeCA9ICIvYmxvZy8iOwogICAgICAgIH0=</text>
      </register>
      <register name="2" type="4">
        <text encoding="base64">ICAvLyBCYW5uZXIgZm9yIHRoZSBkZWZhdWx0IHRoZW1lCiAgICAgICAgICAgICAgICBwdWJsaWMgc3RhdGljIGNsYXNzIEJhbm5lcgogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgc3RyaW5nIEltYWdlID0gImNvcmVfYmFubmVyX2ltYWdlIjsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBMb2dvcyBldGMKICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgY2xhc3MgQnJhbmRpbmcKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgc3RhdGljIHN0cmluZyBOYW1lID0gImNvcmVfc3RvcmVfZGlzcGxheV9uYW1lIjsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgc3RhdGljIHN0cmluZyBMb2dvID0gImNvcmVfc3RvcmVfbG9nbyI7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIHN0YXRpYyBzdHJpbmcgSWNvbiA9ICJjb3JlX3N0b3JlX2ljb24iOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIFByb2R1Y3Qgb3B0aW9ucwogICAgICAgICAgICAgICAgcHVibGljIHN0YXRpYyBjbGFzcyBQcm9kdWN0cwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgc3RyaW5nIERpc3BsYXlTaGFyZUJ1dHRvbnMgPSAiY29yZV9zaGFyZV9idXR0b25zIjsKCiAgICAgICAgICAgICAgICAgICAgLy8gUmVTaGFycGVyIGRpc2FibGUgb25jZSBJbmNvbnNpc3RlbnROYW1pbmcKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgc3RhdGljIHN0cmluZyBEaXNwbGF5U0tVID0gImNvcmVfZGlzcGxheV9za3UiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgc3RyaW5nIERpc3BsYXlRdWFudGl0eSA9ICJjb3JlX2Rpc3BsYXlfcXVhbnRpdHkiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgc3RyaW5nIERpc3BsYXlDdXJyZW5jeUNvZGUgPSAiY29yZV9kaXNwbGF5X2N1cnJlbmN5X2NvZGUiOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIE1lZGlhIG9wdGlvbnMKICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgY2xhc3MgTWVkaWEKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgc3RhdGljIHN0cmluZyBVc2VTcXVhcmVJbWFnZXMgPSAiY29yZV9zcXVhcmVfaW1hZ2VzIjsKCiAgICAgICAgICAgICAgICAgICAgcHVibGljIHN0YXRpYyBjbGFzcyBVc2VTcXVhcmVJbWFnZXNWYWx1ZXMKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgc3RyaW5nIExpc3RWaWV3ID0gImxpc3QtdmlldyI7CiAgICAgICAgICAgICAgICAgICAgICAgIHB1YmxpYyBzdGF0aWMgc3RyaW5nIFByb2R1Y3REZXRhaWwgPSAicHJvZHVjdC1kZXRhaWwiOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBTZXR0aW5ncwogICAgICAgICAgICAgICAgcHVibGljIHN0YXRpYyBjbGFzcyBNaXNjCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIHN0YXRpYyBzdHJpbmcgRGlzcGxheUNvb2tpZUJhbm5lciA9ICJjb3JlX2Rpc3BsYXlfY29va2llX2Jhbm5lciI7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIHN0YXRpYyBzdHJpbmcgQ29va2llQmFubmVyVXJsID0gImNvcmVfY29va2llX2Jhbm5lcl91cmwiOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIFByb3BlcnRpZXMgZm9yIHNldHRpbmdzCiAgICAgICAgICAgICAgICBwdWJsaWMgc3RhdGljIGNsYXNzIFByb3BlcnRpZXMKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIExhYmVsID0gImxhYmVsIjsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIE5hbWUgPSAibmFtZSI7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBWYWx1ZSA9ICJ2YWx1ZSI7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBUeXBlID0gInR5cGUiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgUGxhY2Vob2xkZXIgPSAicGxhY2Vob2xkZXIiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgT3B0aW9ucyA9ICJvcHRpb25zIjsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIFJlcXVpcmVkID0gInJlcXVpcmVkIjsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIEFsbG93UmVsYXRpdmUgPSAiYWxsb3dfcmVsYXRpdmUiOwoKICAgICAgICAgICAgICAgICAgICAvLyBIZWxwCiAgICAgICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBIZWxwID0gImhlbHAiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgSW5wdXQgPSAiaW5wdXQiOwoKICAgICAgICAgICAgICAgICAgICAvLyBHcm91cGluZwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgR3JvdXAgPSAiZ3JvdXAiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgU2VjdGlvbiA9ICJzZWN0aW9uIjsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIFNlY3Rpb25zID0gInNlY3Rpb25zIjsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIElkID0gImlkIjsKCiAgICAgICAgICAgICAgICAgICAgLy8gTnVtYmVyICYgUmFuZ2UKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIE1pbiA9ICJtaW4iOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgTWF4ID0gIm1heCI7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBTdGVwID0gInN0ZXAiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgU3RlcHMgPSAic3RlcHMiOwoKICAgICAgICAgICAgICAgICAgICAvLyBEZXBlbmRlbmNpZXMKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIERlcGVuZGVuY2llcyA9ICJkZXBlbmRlbmNpZXMiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgQ2FzZXMgPSAiY2FzZXMiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgTWF0Y2ggPSAibWF0Y2giOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBwdWJsaWMgc3RhdGljIGNsYXNzIERyb3BzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIC8vIENvbW1vbiBmb3IgYWxsIHBhZ2VzCiAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIFN0b3JlID0gInN0b3JlIjsKICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgQmxvZyA9ICJibG9nIjsKICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgQ2F0ZWdvcmllcyA9ICJjYXRlZ29yaWVzIjsKICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgUGFnZSA9ICJwYWdlIjsKICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgTGlua3MgPSAibGlua3MiOwoKICAgICAgICAgICAgICAgIC8vIFBhZ2Ugc3BlY2lmaWMKICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgSXRlbSA9ICJpdGVtIjsKICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgQ2F0ZWdvcnkgPSAiY2F0ZWdvcnkiOwogICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBBcnRpY2xlID0gImFydGljbGUiOwogICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBTZWFyY2ggPSAic2VhcmNoIjsKICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgVGFnID0gInRhZyI7CgogICAgICAgICAgICAgICAgLy8gQmxvY2sgZ2VuZXJpYyBkcm9wIC8gZGljdGlvbmFyeQogICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBCbG9jayA9ICJibG9jayI7CgogICAgICAgICAgICAgICAgcHVibGljIHN0YXRpYyBjbGFzcyBCbG9ja3MKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIEZvcm0gPSAiZm9ybSI7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBJZCA9ICJpZCI7CiAgICAgICAgICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBUeXBlID0gInR5cGUiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgU2V0dGluZ3MgPSAic2V0dGluZ3MiOwogICAgICAgICAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgSHRtbCA9ICJodG1sIjsKICAgICAgICAgICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIFVybCA9ICJ1cmwiOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBwdWJsaWMgc3RhdGljIGNsYXNzIEJsb2NrcwogICAgICAgIHsKICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBDb2x1bW5OYW1lID0gImNvbHVtbl97MH0iOwoKICAgICAgICAgICAgLy8gRG9uJ3QgYWxsb3cgc29tZSB0eXBlcyB0byBiZSBuZXN0ZWQgKGUuZy4gZ3JpZCkKICAgICAgICAgICAgcHVibGljIHN0YXRpYyBMaXN0PENvbnRlbnRCbG9ja1R5cGU+IERpc2FibGVOZXN0aW5nID0gbmV3IExpc3Q8Q29udGVudEJsb2NrVHlwZT4KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgQ29udGVudEJsb2NrVHlwZS5HcmlkCiAgICAgICAgICAgIH07CiAgICAgICAgfQoKICAgICAgICBwdWJsaWMgc3RhdGljIGNsYXNzIFF1ZXJ5U3RyaW5nS2V5cwogICAgICAgIHsKICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBNb2RlID0gIm1vZGUiOwogICAgICAgICAgICBwdWJsaWMgY29uc3Qgc3RyaW5nIFRoZW1lID0gInRoZW1lIjsKICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBGcmFtZSA9ICJmcmFtZSI7CiAgICAgICAgfQo=</text>
      </register>
      <register name="3" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="4" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="5" type="4">
        <text encoding="base64">ICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBQcm9kdWN0UGFnZVBhdGhQcmVmaXggPSAiL2l0ZW0vIjsKICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBDYXRlZ29yeVBhZ2VQYXRoUHJlZml4ID0gIi9jYXRlZ29yaWVzLyI7CiAgICAgICAgICAgIHB1YmxpYyBjb25zdCBzdHJpbmcgQ29udGVudFBhZ2VQYXRoUHJlZml4ID0gIi9wYWdlcy8iOw==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">CiAgIAo=</text>
      </register>
      <register name="7" type="4">
        <text encoding="base64">IFtDb2xsZWN0aW9uTmFtZSgiUGFnZSIpXQogICAgcHVibGljIGNsYXNzIFBhZ2UgOiBQYWdlQmFzZQogICAgewogICAgICAgIHB1YmxpYyBvdmVycmlkZSBzdHJpbmcgUGFnZVBhdGggeyBnZXQ7IHNldDsgfQogICAgICAgIAogICAgICAgIFtCc29uSWdub3JlXQogICAgICAgIHB1YmxpYyBib29sIElzQ29udGVudFBhZ2UgPT4gUGFnZVBhdGguU3RhcnRzV2l0aChDb25zdGFudHMuUGFnZXMuQ29udGVudFBhZ2VQYXRoUHJlZml4KTsKCiAgICAgICAgW0Jzb25JZ25vcmVdCiAgICAgICAgcHVibGljIHN0cmluZyBTbHVnID0+IFBhZ2VQYXRoLlJlcGxhY2UoQ29uc3RhbnRzLlBhZ2VzLkNvbnRlbnRQYWdlUGF0aFByZWZpeCwgc3RyaW5nLkVtcHR5KTsKCiAgICAgICAgcHVibGljIHN0YXRpYyBzdHJpbmcgVG9QYWdlUGF0aChzdHJpbmcgc2x1ZykKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybiAkIntDb25zdGFudHMuUGFnZXMuQ29udGVudFBhZ2VQYXRoUHJlZml4fXtzbHVnfSI7CiAgICAgICAgfQogICAgfQ==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICAgZCAgICAgICAgICAgewo=</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICB9Cg==</text>
      </register>
      <register name="-" type="4">
        <text />
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxJTW9uZ29Db2xsZWN0aW9uXD4=</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxJTW9uZ29Db2xsZWN0aW9uXD4=</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxJTW9uZ29Db2xsZWN0aW9uXD4=</last-pattern>
      <last-replace>~</last-replace>
      <last-substitute encoding="base64">XDxJTW9uZ29Db2xsZWN0aW9uXD4=</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDxIdG1sU3RyaW5nXD4=</entry>
        <entry encoding="base64">XDxTdHJpbmdIdG1sQ29udGVudFw+</entry>
        <entry encoding="base64">XDxhbmFseXRpY3NcPg==</entry>
        <entry encoding="base64">XDxfbWVtb3J5Q2FjaGVDbGllbnRcPg==</entry>
        <entry encoding="base64">XDxfZ29vZ2xlU2V0dGluZ3NcPg==</entry>
        <entry encoding="base64">XDxfaG9zdGluZ1w+</entry>
        <entry encoding="base64">XDxfYnVuZGxlSGVscGVyXD4=</entry>
        <entry encoding="base64">XDxTY3JlZW5SZWFkZXJPbmx5XD4=</entry>
        <entry encoding="base64">XDxJbnN0YWxsZWRUaGVtZVw+</entry>
        <entry encoding="base64">XDxTZWx6XD4=</entry>
        <entry encoding="base64">XDxHZXRQYWdlXD4=</entry>
        <entry>inter</entry>
        <entry encoding="base64">XDxlZGl0YWJsZVJlZ2lvbkFyZ3VtZW50c1w+</entry>
        <entry encoding="base64">XDxFZGl0YWJsZVJlZ2lvbkFyZ3VtZW50c1w+</entry>
        <entry encoding="base64">XDxwYXJ0aWFsQmxvY2tNb2RlbFw+</entry>
        <entry encoding="base64">XDxibG9ja1NldHRpbmdcPg==</entry>
        <entry encoding="base64">XDx2YWx1ZVRva2VuXD4=</entry>
        <entry encoding="base64">XDxfcGFnZVNlcnZpY2VcPg==</entry>
        <entry encoding="base64">XDxtb2NrQ29sbGVjdGlvblw+</entry>
        <entry encoding="base64">XDxJTW9uZ29Db2xsZWN0aW9uXD4=</entry>
      </history-search>
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>