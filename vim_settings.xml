<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Controllers/BlogPostsController.cs" timestamp="1571016325013" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Domains/Images/ImageSize.cs" timestamp="1571010311160" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Helpers/ImageUrlHelper.cs" timestamp="1571007661890" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Shared/Selz.Shops.Core/Helpers/CDNHelper.cs" timestamp="1571019373488">
        <mark key="[" line="8" column="8" />
        <mark key="]" line="8" column="8" />
        <mark key="." line="8" column="8" />
        <mark key="^" line="20" column="28" />
      </file>
      <file name="C:/dev/git/selz/API/src/Selz.Model/Helpers/CDNHelper.cs" timestamp="1571013455435" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Extensions/ShopImageExtensions.cs" timestamp="1571007818385" />
      <file name="/CDNHelper.cs" timestamp="1571008923598" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Shared/Selz.Shops.Core/Extensions/UriExtensions.cs" timestamp="1571008596629">
        <mark key="[" line="37" column="12" />
        <mark key="]" line="37" column="12" />
        <mark key="." line="37" column="12" />
      </file>
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Mapping/BlogPosts/BlogPostProfile.cs" timestamp="1571012442630">
        <mark key="'" line="23" column="130" />
        <mark key="[" line="44" column="0" />
        <mark key="]" line="44" column="70" />
        <mark key="." line="44" column="37" />
        <mark key="^" line="44" column="37" />
      </file>
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/BlogPosts/BlogPostScenarios.cs" timestamp="1571021094743">
        <mark key="[" line="493" column="0" />
        <mark key="]" line="493" column="0" />
        <mark key="." line="493" column="0" />
      </file>
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Extensions/DatetimeExtensions.cs" timestamp="1570783023062">
        <mark key="[" line="125" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1571020994806">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/ImageResponse.cs" timestamp="1571012152029" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/Base/FakeBlogPosts.cs" timestamp="1571020635601">
        <mark key="'" line="55" column="54" />
        <mark key="[" line="20" column="40" />
        <mark key="]" line="20" column="48" />
        <mark key="." line="20" column="45" />
        <mark key="^" line="20" column="45" />
      </file>
      <file name="C:/dev/git/selz/Services.Catalog/Service/src/Api/Selz.Catalog.Api.UnitTests/Selz.Catalog.Api.UnitTests.csproj" timestamp="1571021152828" />
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.Models/Images/ImageResponse.cs" timestamp="1571015541389">
        <mark key="[" line="22" column="26" />
        <mark key="]" line="22" column="26" />
        <mark key="." line="22" column="26" />
        <mark key="^" line="14" column="39" />
      </file>
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Extensions/UriExtensions.cs" timestamp="1571008380834">
        <mark key="[" line="221" column="0" />
        <mark key="]" line="234" column="9" />
        <mark key="^" line="113" column="36" />
        <mark key="." line="113" column="36" />
      </file>
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Helpers/CDNHelper.cs" timestamp="1571009230284">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="48" />
      </file>
      <file name="C:/dev/git/selz/drachma/core/Selz.Core.Domains.Shops/Images/ShopImage.cs" timestamp="1571011971098" />
      <file name="C:/dev/git/selz/drachma/src/Drachma.Core/Constants.cs" timestamp="1571017113805">
        <mark key="[" line="545" column="0" />
        <mark key="]" line="545" column="79" />
      </file>
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Shared/Selz.Shops.Core/Helpers/ImageUrlHelper.cs" timestamp="1571017499701">
        <mark key="[" line="67" column="16" />
        <mark key="]" line="82" column="21" />
        <mark key="." line="82" column="21" />
        <mark key="^" line="82" column="21" />
      </file>
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Shared/Selz.Shops.Core/Constants.cs" timestamp="1571017117631">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="/ImageViewModel.cs" timestamp="1571005080918">
        <mark key="[" line="32" column="30" />
        <mark key="]" line="32" column="91" />
      </file>
      <file name="C:/dev/git/selz/Services.Shop/Service/src/Shared/Selz.Shops.Core/Services/Images/ImageSize.cs" timestamp="1571009784424">
        <mark key="[" line="1" column="4" />
        <mark key="]" line="2" column="0" />
        <mark key="^" line="14" column="27" />
        <mark key="." line="1" column="1" />
      </file>
      <file name="C:/dev/git/selz/drachma/src/Drachma.Web/Models/ImageViewModel.cs" timestamp="1571010475162">
        <mark key="[" line="31" column="30" />
        <mark key="]" line="31" column="90" />
      </file>
    </filemarks>
    <jumps>
      <jump line="784" column="0" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/9b/1fde75c7/Path.cs" />
      <jump line="620" column="180" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="637" column="180" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="655" column="180" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="675" column="180" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="21" column="36" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="283" column="205" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="595" column="176" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="607" column="180" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/06452B71-9576-486B-AAA3-34B141B6537A/d4/67ba58bd/TimeSpan.cs" />
      <jump line="4316" column="32" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/862B9365-843C-4BF1-BA93-210C124BB523/f3/80e9d7cb/Uri.cs" />
      <jump line="109" column="55" filename="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Extensions/UriExtensions.cs" />
      <jump line="146" column="15" filename="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Helpers/ImageUrlHelper.cs" />
      <jump line="1352" column="27" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/862B9365-843C-4BF1-BA93-210C124BB523/f3/80e9d7cb/Uri.cs" />
      <jump line="72" column="11" filename="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Helpers/CDNHelper.cs" />
      <jump line="61" column="0" filename="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Helpers/CDNHelper.cs" />
      <jump line="62" column="11" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/862B9365-843C-4BF1-BA93-210C124BB523/87/b155264c/UriBuilder.cs" />
      <jump line="739" column="59" filename="C:/dev/git/selz/drachma/src/Drachma.Core/Infrastructure/Extensions/StringExtensions.cs" />
      <jump line="23" column="130" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api/Mapping/BlogPosts/BlogPostProfile.cs" />
      <jump line="36" column="17" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/BlogPosts/BlogPostScenarios.cs" />
      <jump line="29" column="0" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/BlogPosts/BlogPostScenarios.cs" />
      <jump line="500" column="76" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/BlogPosts/BlogPostScenarios.cs" />
      <jump line="55" column="54" filename="C:/dev/git/selz/Services.Shop/Service/src/Api/Selz.Shops.Api.FunctionalTests/Base/FakeBlogPosts.cs" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>blogPostId</text>
      </register>
      <register name="c" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIHIuCg==</text>
      </register>
      <register name="+" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIHIuCg==</text>
      </register>
      <register name="-" type="4">
        <text>FakeBlogPosts.ImageUrlTypes[0]</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxaZXJvXD4=</text>
      </register>
      <register name="0" type="4">
        <text>ImageUrls</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cgo=</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgIAo=</text>
      </register>
      <register name="3" type="4">
        <text encoding="base64">IFtGYWN0XQogICAgICAgIHB1YmxpYyBhc3luYyBUYXNrIEdldF9ibG9ncG9zdF9ieV9pZF93aXRoX2ltYWdlX2FuZF9yZXNwb25zZV9vaygpCiAgICAgICAgewogICAgICAgICAgICB1c2luZyAodmFyIHNlcnZlciA9IENyZWF0ZVNlcnZlcigpKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB1c2luZyAodmFyIHNjb3BlID0gc2VydmVyLkhvc3QuU2VydmljZXMuQ3JlYXRlU2NvcGUoKSkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB2YXIgcmVwb3NpdG9yeSA9IHNjb3BlLlNlcnZpY2VQcm92aWRlci5HZXRTZXJ2aWNlPElSZXBvc2l0b3J5PEJsb2dQb3N0Pj4oKTsKICAgICAgICAgICAgICAgICAgICB2YXIgbWFwcGVyID0gc2NvcGUuU2VydmljZVByb3ZpZGVyLkdldFNlcnZpY2U8SU1hcHBlcj4oKTsKCiAgICAgICAgICAgICAgICAgICAgdmFyIGJsb2dQb3N0cyA9IGF3YWl0IEdldFRlc3RCbG9nUG9zdHNMaXN0KHJlcG9zaXRvcnkpOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHZhciBibG9nUG9zdCA9IGJsb2dQb3N0cy5XaGVyZShiID0+IHN0cmluZy5Jc051bGxPckVtcHR5KGIuSW1hZ2VzLk9yaWdpbmFsKSkuRmlyc3QoKTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICB2YXIgY2xpZW50ID0gc2VydmVyLkdldEJsb2dQb3N0Q2xpZW50KCk7CgogICAgICAgICAgICAgICAgICAgIHZhciByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5HZXRCeUlkQXN5bmMoYmxvZ1Bvc3QuSWQuVG9TdHJpbmcoKSwgQ29ycmVsYXRpb25JZCk7CiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UuSGVhZGVycy5TaG91bGQoKS5Db250YWluKGhlYWRlciA9PiBoZWFkZXIuS2V5ID09ICJYLUNvcnJlbGF0aW9uLUlkIik7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgQXNzZXJ0LmJsbwogICAgICAgICAgICAgICAgICAgIEFzc2VydEJsb2dQb3N0RGV0YWlscyhibG9nUG9zdCwgcmVzcG9uc2UuQ29udGVudCwgbWFwcGVyKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICBbSW5saW5lRGF0YSgiaHR0cHM6Ly9zZWx6aW1nLXRlc3QuczMuYW1hem9uYXdzLmNvbSIpXQo=</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAgICAgImh0dHBzOi8vczMuYW1hem9uYXdzLmNvbSIsCg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAgICAgCg==</text>
      </register>
      <register name="7" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwo=</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgcHVibGljIGNvbnN0IHN0cmluZyBJbWFnZXNUZXN0ID0gImh0dHBzOi8vaW1hZ2VzLXRlc3Quc2VsenN0YXRpYy5jb20iOwo=</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxaZXJvXD4=</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxaZXJvXD4=</last-pattern>
      <last-replace>~</last-replace>
      <last-substitute>f{</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDxFZGl0YWJsZVJlZ2lvbkFyZ3VtZW50c1w+</entry>
        <entry encoding="base64">XDxwYXJ0aWFsQmxvY2tNb2RlbFw+</entry>
        <entry encoding="base64">XDxibG9ja1NldHRpbmdcPg==</entry>
        <entry encoding="base64">XDx2YWx1ZVRva2VuXD4=</entry>
        <entry encoding="base64">XDxfcGFnZVNlcnZpY2VcPg==</entry>
        <entry encoding="base64">XDxtb2NrQ29sbGVjdGlvblw+</entry>
        <entry encoding="base64">XDxJTW9uZ29Db2xsZWN0aW9uXD4=</entry>
        <entry encoding="base64">XDxmb3JtQXJndW1lbnRzXD4=</entry>
        <entry encoding="base64">XDxQaXBlXD4=</entry>
        <entry encoding="base64">XDxFeHByZXNzaW9uTGlzdFw+</entry>
        <entry encoding="base64">XDxFeHByZXNzaW9uXD4=</entry>
        <entry encoding="base64">XDxUZXJtXD4=</entry>
        <entry>f{</entry>
        <entry encoding="base64">XDx1c2VTcXVhcmVcPg==</entry>
        <entry>class</entry>
        <entry encoding="base64">XDxCdWlsZFRlc3RMb2NhbFw+</entry>
        <entry>{</entry>
        <entry encoding="base64">XDxQYXR0ZXJuXD4=</entry>
        <entry encoding="base64">XDxmYWN0b3J5XD4=</entry>
        <entry encoding="base64">XDxaZXJvXD4=</entry>
      </history-search>
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed BACK_SLASH</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 6</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>