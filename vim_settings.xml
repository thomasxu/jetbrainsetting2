<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="C:/dev/git/selz/API/PetAppClient/src/index.html" timestamp="1553508475929">
        <mark key="[" line="5" column="9" />
        <mark key="]" line="5" column="9" />
        <mark key="." line="5" column="9" />
      </file>
      <file name="$USER_HOME$/Downloads/angular6-material-example-master/angular6-material-example-master/src/app/service/user.service.ts" timestamp="1553499954790">
        <mark key="[" line="16" column="23" />
        <mark key="]" line="16" column="23" />
        <mark key="." line="16" column="23" />
        <mark key="^" line="16" column="9" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/package.json" timestamp="1553508653828">
        <mark key="[" line="1" column="11" />
        <mark key="]" line="1" column="11" />
        <mark key="." line="1" column="11" />
        <mark key="^" line="1" column="10" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/angular.json" timestamp="1553508552683">
        <mark key="'" line="68" column="62" />
        <mark key="[" line="109" column="17" />
        <mark key="]" line="109" column="17" />
        <mark key="." line="109" column="17" />
        <mark key="^" line="109" column="16" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/app.component.html" timestamp="1553503801480">
        <mark key="[" line="6" column="14" />
        <mark key="]" line="6" column="17" />
        <mark key="." line="6" column="17" />
        <mark key="^" line="6" column="17" />
      </file>
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/components/supplier-list/supplier-list.component.ts" timestamp="1551919547511">
        <mark key="[" line="73" column="0" />
        <mark key="]" line="73" column="0" />
        <mark key="." line="73" column="0" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/pet-list/pet-list.component.css" timestamp="1553507561238">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/services/pet.service.ts" timestamp="1553509140219">
        <mark key="'" line="26" column="26" />
        <mark key="[" line="27" column="92" />
        <mark key="]" line="27" column="92" />
        <mark key="^" line="17" column="16" />
        <mark key="." line="27" column="92" />
      </file>
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-supplier-contact-table/job-tradepackage-life-cycle-supplier-contact-table.component.html" timestamp="1553502466091">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="0" column="0" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/environments/environment.prod.ts" timestamp="1553505615579" />
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/jobs/jobs.component.ts" timestamp="1553505527404">
        <mark key="[" line="16" column="40" />
        <mark key="]" line="16" column="40" />
        <mark key="." line="16" column="40" />
        <mark key="^" line="16" column="31" />
      </file>
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/models/user-preference.object.ts" timestamp="1551745693099">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/pet-list/pet-list.component.html" timestamp="1553508897661">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="8" />
        <mark key="." line="0" column="8" />
        <mark key="^" line="0" column="8" />
      </file>
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackages-life-cycle/job-tradepackages-life-cycle.component.html" timestamp="1551747759997">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/pet-list/pet-list.component.ts" timestamp="1553509043783">
        <mark key="[" line="23" column="57" />
        <mark key="]" line="23" column="56" />
        <mark key="." line="23" column="56" />
        <mark key="^" line="23" column="56" />
      </file>
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/models/tradepackage-lifecycle/responses/trade-package-life-cycle.response.ts" timestamp="1551918439006">
        <mark key="[" line="49" column="3" />
        <mark key="]" line="49" column="18" />
        <mark key="." line="49" column="3" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/app.component.ts" timestamp="1553508693208">
        <mark key="[" line="8" column="11" />
        <mark key="]" line="8" column="13" />
        <mark key="." line="8" column="13" />
        <mark key="^" line="8" column="13" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/app.module.ts" timestamp="1553508406326">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch.js" timestamp="1551058792773">
        <mark key="[" line="3" column="10" />
        <mark key="]" line="3" column="10" />
        <mark key="." line="3" column="10" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/package-lock.json" timestamp="1553508620092">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/karma.conf.js" timestamp="1553508711957">
        <mark key="[" line="18" column="56" />
        <mark key="]" line="18" column="67" />
        <mark key="." line="18" column="67" />
        <mark key="^" line="18" column="67" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/environments/environment.ts" timestamp="1553509364241">
        <mark key="[" line="6" column="34" />
        <mark key="]" line="6" column="34" />
        <mark key="." line="6" column="34" />
        <mark key="^" line="6" column="34" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/candidate/candidate.component.html" timestamp="1553502661459" />
      <file name="C:/dev/git/selz/API/PetAppClient/README.md" timestamp="1553508111102">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
        <mark key="^" line="1" column="48" />
      </file>
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-supplier-contact-table/job-tradepackage-life-cycle-supplier-contact-table.component.ts" timestamp="1553504412113">
        <mark key="[" line="38" column="0" />
        <mark key="]" line="38" column="0" />
        <mark key="." line="38" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1553505552245">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/angular6-material-example-master/angular6-material-example-master/src/app/login/login.component.ts" timestamp="1553499865119" />
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/services/supplier.service.ts" timestamp="1551915331852">
        <mark key="[" line="213" column="0" />
        <mark key="]" line="213" column="68" />
        <mark key="." line="213" column="16" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/pet-list/pet-list-datasource.ts" timestamp="1553504451417">
        <mark key="[" line="82" column="74" />
        <mark key="]" line="40" column="47" />
        <mark key="^" line="40" column="47" />
        <mark key="." line="40" column="47" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/models/pet.model.ts" timestamp="1553507736204">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="9" column="1" />
        <mark key="^" line="8" column="22" />
        <mark key="." line="11" column="0" />
      </file>
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-add-supplier-dialog/job-tradepackage-life-cycle-add-supplier-dialog.component.less" timestamp="1551840434702">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="C:/dev/git/selz/API/PetAppClient/src/app/app-routing.module.ts" timestamp="1553508825608">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="0" />
        <mark key="." line="2" column="0" />
        <mark key="^" line="14" column="2" />
      </file>
      <file name="$USER_HOME$/Downloads/angular6-material-example-master/angular6-material-example-master/src/app/login/login.component.html" timestamp="1553500124307">
        <mark key="[" line="35" column="46" />
        <mark key="]" line="35" column="46" />
        <mark key="^" line="35" column="58" />
        <mark key="." line="35" column="46" />
      </file>
      <file name="$USER_HOME$/Downloads/angular6-material-example-master/angular6-material-example-master/src/app/list-user/list-user.component.html" timestamp="1553500104560" />
      <file name="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackages-life-cycle/job-tradepackages-life-cycle.component.ts" timestamp="1551747463399">
        <mark key="[" line="140" column="0" />
        <mark key="]" line="140" column="0" />
        <mark key="." line="140" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="11" column="17" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/HealthServerController.cs" />
      <jump line="27" column="16" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/HealthServerController.cs" />
      <jump line="33" column="19" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Handlers/HttpMessageHandler.cs" />
      <jump line="97" column="8" filename="/FixHeaderQuoteAmountUpdater.cs" />
      <jump line="27" column="10" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/profile-popup-password/profile-popup-password.component.html" />
      <jump line="18" column="49" filename="/job-tradepackage-life-cycle-item.component.html" />
      <jump line="36" column="0" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-item/job-tradepackage-life-cycle-item.component.html" />
      <jump line="13" column="33" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-item/job-tradepackage-life-cycle-item.component.html" />
      <jump line="12" column="20" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-item/job-tradepackage-life-cycle-item.component.html" />
      <jump line="152" column="0" filename="/user-preference.service.ts" />
      <jump line="38" column="106" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V2/Integration/IntegrationV2Controller.cs" />
      <jump line="26" column="30" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V2/Integration/IntegrationV2Controller.cs" />
      <jump line="43" column="34" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V2/Integration/IntegrationV2Controller.cs" />
      <jump line="51" column="1" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V2/Integration/IntegrationV2Controller.cs" />
      <jump line="120" column="23" filename="$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/metadata/B8C6DCF6-8FC9-437D-A15B-83AE064ADE8D/9a/18f4bac0/RegistrationExtensions.cs" />
      <jump line="89" column="104" filename="C:/dev/git/bartender/Buildsoft.Bartender.Entities/RepositoryCache/CacheRepository.cs" />
      <jump line="32" column="0" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Notifications/NotificationProxy.cs" />
      <jump line="156" column="34" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V1/Logs/LogController.Query.cs" />
      <jump line="38" column="0" filename="/AuthenticationController.Command.cs" />
      <jump line="141" column="3" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V1/Logs/LogController.Query.cs" />
      <jump line="140" column="4" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V1/Logs/LogController.Query.cs" />
      <jump line="139" column="0" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V1/Logs/LogController.Query.cs" />
      <jump line="162" column="0" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/V1/Logs/LogController.Query.cs" />
      <jump line="96" column="78" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/Job/JobCreator.cs" />
      <jump line="159" column="49" filename="C:/dev/git/bartender/Buildsoft.Bartender.Entities/Core/Job.cs" />
      <jump line="209" column="44" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/Job/JobCreator.cs" />
      <jump line="18" column="146" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api.Model/Integration/Job/Request/EstimateTotal.cs" />
      <jump line="9" column="17" filename="C:/dev/git/bartender/Buildsoft.Bartender.Api.Model/Job/Export/JobExport.cs" />
      <jump line="19" column="15" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="21" column="0" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="24" column="0" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="39" column="24" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="42" column="0" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="44" column="28" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="55" column="35" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="52" column="30" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="2" column="25" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="47" column="15" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="28" column="37" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="26" column="8" filename="$USER_HOME$/RiderProjects/ConsoleApp2/ConsoleApp2/Program.cs" />
      <jump line="14" column="7" filename="$USER_HOME$/RiderProjects/Vega/Vega/Models/Model.cs" />
      <jump line="2" column="11" filename="$USER_HOME$/RiderProjects/Vega/Vega/Models/Model.cs" />
      <jump line="12" column="0" filename="$USER_HOME$/RiderProjects/Vega/Vega/Startup.cs" />
      <jump line="35" column="54" filename="$USER_HOME$/RiderProjects/Vega/Vega/Migrations/20190209112620_Initial migration.cs" />
      <jump line="6" column="17" filename="$USER_HOME$/RiderProjects/Vega/Vega/Data/Vehicle.cs" />
      <jump line="0" column="0" filename="$USER_HOME$/RiderProjects/Vega/Vega/Data/Vehicle.cs" />
      <jump line="3" column="4" filename="C:/dev/git/bartender/Buildsoft.Bartender.IntegrationTest/Repositories/QuoteAmounts/QuoteAmountRepositoryTest.Fix.cs" />
      <jump line="79" column="19" filename="C:/dev/git/bartender/Buildsoft.Bartender.IntegrationTest/Repositories/QuoteAmounts/QuoteAmountRepositoryTest.Utility.cs" />
      <jump line="0" column="0" filename="C:/dev/git/bartender/Bartender.ApiHost/Web.config" />
      <jump line="233" column="21" filename="C:/dev/git/bartender/Buildsoft.Bartender.IntegrationTest/Repositories/QuoteAmounts/QuoteAmountRepositoryTest.Utility.cs" />
      <jump line="240" column="71" filename="C:/dev/git/bartender/Buildsoft.Bartender.IntegrationTest/Repositories/QuoteAmounts/QuoteAmountRepositoryTest.Utility.cs" />
      <jump line="261" column="161" filename="C:/dev/git/bartender/Buildsoft.Bartender.IntegrationTest/Repositories/QuoteAmounts/QuoteAmountRepositoryTest.Utility.cs" />
      <jump line="344" column="39" filename="C:/dev/git/bartender/Buildsoft.Bartender.IntegrationTest/Repositories/QuoteAmounts/QuoteAmountRepositoryTest.cs" />
      <jump line="30" column="45" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/QuoteAmount/Updaters/PickQuoteAmountUpdater.cs" />
      <jump line="228" column="0" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/QuoteAmount/Updaters/PickQuoteAmountUpdater.cs" />
      <jump line="209" column="46" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/QuoteAmount/Updaters/PickQuoteAmountUpdater.cs" />
      <jump line="24" column="26" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/QuoteAmount/Updaters/QuoteAmountUpdater.cs" />
      <jump line="18" column="17" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/QuoteAmount/Updaters/PickQuoteAmountUpdater.cs" />
      <jump line="220" column="8" filename="C:/dev/git/bartender/Buildsoft.Bartender.Business/QuoteAmount/Updaters/PickQuoteAmountUpdater.cs" />
      <jump line="12" column="35" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Infrastructure/ApiClient/JobClient.cs" />
      <jump line="5" column="25" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Infrastructure/ApiClient/CandidateClient.cs" />
      <jump line="35" column="51" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application/JobService.cs" />
      <jump line="33" column="66" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application/JobService.cs" />
      <jump line="66" column="49" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application.UnitTest/JobServiceTest.cs" />
      <jump line="37" column="42" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application.UnitTest/JobServiceTest.cs" />
      <jump line="178" column="65" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application.UnitTest/JobServiceTest.cs" />
      <jump line="295" column="0" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application.UnitTest/JobServiceTest.cs" />
      <jump line="237" column="0" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application.UnitTest/JobServiceTest.cs" />
      <jump line="248" column="51" filename="$USER_HOME$/RiderProjects/Solution1/JobAdder.Application.UnitTest/JobServiceTest.cs" />
      <jump line="36" column="52" filename="C:/dev/git/JobAdder/JobMatcher/JobMatcher.Application/Services/Jobs/JobService.cs" />
      <jump line="43" column="32" filename="C:/dev/git/JobAdder/JobMatcher/JobMatcher.Application/Services/Jobs/JobService.cs" />
      <jump line="148" column="53" filename="C:/dev/git/JobAdder/JobMatcher/JobMatcher.Application.Test/JobServiceTest.cs" />
      <jump line="28" column="62" filename="C:/dev/git/JobAdder/JobMatcher/JobMatcher.Application/Services/Jobs/JobService.cs" />
      <jump line="0" column="0" filename="/Dummy.txt" />
      <jump line="1" column="25" filename="C:/dev/git/JobAdder/JobMatcher/JobMatcher.Api/README.md" />
      <jump line="8" column="40" filename="$USER_HOME$/RiderProjects/ConsoleApp4/ConsoleApp4/Program.cs" />
      <jump line="71" column="34" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackages-life-cycle/job-tradepackages-life-cycle.component.ts" />
      <jump line="506" column="16" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-quotes/job-tradepackage-quotes.component.ts" />
      <jump line="17" column="33" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-item/job-tradepackage-life-cycle-item.component.html" />
      <jump line="1" column="29" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/add-package-lifecycle-supplier/add-package-lifecycle-supplier.component.html" />
      <jump line="25" column="0" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/add-package-lifecycle-supplier/add-package-lifecycle-supplier.component.html" />
      <jump line="200" column="0" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-item/job-tradepackage-life-cycle-item.component.ts" />
      <jump line="110" column="8" filename="C:/dev/git/bartender/WebApp/src/app/comparison/comparison.module.ts" />
      <jump line="215" column="4" filename="C:/dev/git/bartender/WebApp/src/app/comparison/comparison.module.ts" />
      <jump line="255" column="57" filename="C:/dev/git/bartender/WebApp/src/app/comparison/comparison.module.ts" />
      <jump line="48" column="4" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/add-package-lifecycle-supplier/add-package-lifecycle-supplier-datasource.ts" />
      <jump line="9" column="8" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-item/job-tradepackage-life-cycle-item.component.html" />
      <jump line="34" column="2" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackages-life-cycle/job-tradepackages-life-cycle.component.ts" />
      <jump line="143" column="0" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackages-life-cycle/job-tradepackages-life-cycle.component.ts" />
      <jump line="34" column="10" filename="C:/dev/git/bartender/WebApp/src/app/comparison/utils/notification-hub.ts" />
      <jump line="77" column="10" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-add-supplier-dialog/job-tradepackage-life-cycle-add-supplier-dialog.component.ts" />
      <jump line="29" column="1" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/add-package-lifecycle-supplier/add-package-lifecycle-supplier.component.html" />
      <jump line="20" column="40" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/add-package-lifecycle-supplier/add-package-lifecycle-supplier.component.html" />
      <jump line="120" column="26" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-item/job-tradepackage-life-cycle-item.component.ts" />
      <jump line="67" column="58" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-add-supplier-dialog/job-tradepackage-life-cycle-add-supplier-dialog.component.ts" />
      <jump line="26" column="238" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/job-tradepackage-life-cycle-add-supplier-dialog/job-tradepackage-life-cycle-add-supplier-dialog.component.html" />
      <jump line="44" column="2" filename="C:/dev/git/bartender/WebApp/src/app/comparison/components/add-package-lifecycle-supplier/add-package-lifecycle-supplier.component.ts" />
      <jump line="25" column="26" filename="C:/dev/git/selz/API/PetAppClient/src/app/services/pet.service.ts" />
      <jump line="68" column="62" filename="C:/dev/git/selz/API/PetAppClient/angular.json" />
      <jump line="0" column="0" filename="C:/dev/git/selz/API/PetAppClient/package-lock.json" />
    </jumps>
    <registers>
      <register name="a" type="4">
        <text>TradePackageTradeCategories</text>
      </register>
      <register name="&quot;" type="4">
        <text>1</text>
      </register>
      <register name="b" type="4">
        <text>GroupBy</text>
      </register>
      <register name="f" type="4">
        <text />
      </register>
      <register name="i" type="4">
        <text>tradePackageItem</text>
      </register>
      <register name="l" type="4">
        <text>quoteLifecycleId</text>
      </register>
      <register name="-" type="4">
        <text>{headers:}</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDx0cmFkZUxpZmVjeWNsZUluUHJvY2Vzc1NvdXJjZVw+</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ZXhwb3J0IGNsYXNzIFBldCB7CiAgaWQ6IHN0cmluZzsKICAnc2hvcF9pZCc6IDE7CiAgc3BlY2llczogMDsKICBuYW1lOiBzdHJpbmc7CiAgZGVzY3JpcHRpb246IHN0cmluZzsKICAnaXNfZW5kYW5nZXJlZCc6IGZhbHNlOwogIGFnZTogMTE7CiAgJ2NyZWF0ZWRfdGltZSc6IERhdGU7Cn0K</text>
      </register>
      <register name="p" type="4">
        <text>public</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ewogICJuYW1lIjogImpvYi1tYXRjaGVyLWFwcCIsCg==</text>
      </register>
      <register name="r" type="4">
        <text>Repository</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">aW1wb3J0IHtKb2JzQ29tcG9uZW50fSBmcm9tICcuL2pvYnMvam9icy5jb21wb25lbnQnOwo=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">aW1wb3J0IHsgSm9ic0NvbXBvbmVudCB9IGZyb20gJy4vam9icy9qb2JzLmNvbXBvbmVudCc7Cg==</text>
      </register>
      <register name="t" type="4">
        <text>TradePackag</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgIEpvYnNDb21wb25lbnQsCg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgIENhbmRpZGF0ZUNvbXBvbmVudCwK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">aW1wb3J0IHsgQ2FuZGlkYXRlQ29tcG9uZW50IH0gZnJvbSAnLi9jYW5kaWRhdGUvY2FuZGlkYXRlLmNvbXBvbmVudCc7Cg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">VGhpcyByZXBvc2l0b3J5IGNvbnRhaW5zIHRoZSBjb2RlIG9mIHRoZSBjb2RlIGNoYWxsZW5nZSBmcm9tIEpvYkFkZGVyLgpUaGUgYXBwbGljYXRpb24gd2lsbCBmaW5kIHRoZSB0b3AgYW5kIG1hdGNoZWQgc2tpbGxzIGFuZGlkYXRlcyBmb3IgYWxsIGpvYnMgbGlzdGVkIG9uIApodHRwOi8vcHJpdmF0ZS03NjQzMi1qb2JhZGRlcjEuYXBpYXJ5LW1vY2suY29tCg==</text>
      </register>
      <register name="9" type="4">
        <text encoding="base64">CgojIEluc3RhbGxhdGlvbiBwcmUtcmVxdWlzaXRlcwpQbGVhc2UgaW5zdGFsbCB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgQW5ndWxhciBDTEkgYW5kIE5vZGVKcwoKIyBTb3VyY2UgY29kZSBzdHJ1Y3R1cmUKSXQgY29udGFpbnMgMiBhcHBsaWNhdGlvbnMKIDEuIEpvYk1hdGNoZXItQXBwIGlzIHRoZSBmcm9udGVuZCBhbmd1bGFyNyBhcHAgCiAyLiBKb2JNYXRjaGVyIGlzIHRoZSBiYWNrZW5kIHVzaW5nIERvdG5ldCBDb3JlIDIuMiAKCiAKIyBIb3cgdG8gcnVuIGJhY2tlbmQgc2Vy</text>
      </register>
      <register name=":" type="4">
        <text>set relativenumber</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDx0cmFkZUxpZmVjeWNsZUluUHJvY2Vzc1NvdXJjZVw+</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDx0cmFkZUxpZmVjeWNsZUluUHJvY2Vzc1NvdXJjZVw+</last-pattern>
      <last-replace>Id1</last-replace>
      <last-substitute encoding="base64">XDx0cmFkZUxpZmVjeWNsZUluUHJvY2Vzc1NvdXJjZVw+</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDxxdW90ZUxpZmVjeWNsZUlkXD4=</entry>
        <entry>;</entry>
        <entry>,</entry>
        <entry>{</entry>
        <entry>TradePackageItementity</entry>
        <entry encoding="base64">XDxxdW90ZUxpZmVjeWNsZVw+</entry>
        <entry>}</entry>
        <entry>total</entry>
        <entry encoding="base64">XDxpc01hbnVhbFRvdGFsXD4=</entry>
        <entry encoding="base64">XDxjaGVja051bGxUb3RhbFw+</entry>
        <entry encoding="base64">XDwpXD4=</entry>
        <entry>+</entry>
        <entry>formField</entry>
        <entry>class</entry>
        <entry>clas</entry>
        <entry>react</entry>
        <entry>takeUtil</entry>
        <entry encoding="base64">XDxKb2JUcmFkZXBhY2thZ2VMaWZlQ3ljbGVBZGRTdXBwbGllckRpYWxvZ0NvbXBvbmVudFw+</entry>
        <entry>merge</entry>
        <entry encoding="base64">XDx0cmFkZUxpZmVjeWNsZUluUHJvY2Vzc1NvdXJjZVw+</entry>
      </history-search>
      <history-cmd>
        <entry>set ;m</entry>
        <entry>set ln</entry>
        <entry>set nu</entry>
        <entry>set autoindent</entry>
        <entry>autoindent</entry>
        <entry>set noerrorbells</entry>
        <entry>set noerrorbell</entry>
        <entry>set showmode</entry>
        <entry>reg</entry>
        <entry>-16,-8 co.</entry>
        <entry>51,56s/Id/Id1/gc</entry>
        <entry encoding="base64">bWFwIA==</entry>
        <entry>nnoremap S diw&quot;0P</entry>
        <entry>wq</entry>
        <entry>w</entry>
        <entry>set showrelativenumber</entry>
        <entry>%s/Date/gc</entry>
        <entry>show number</entry>
        <entry>set number</entry>
        <entry>set relativenumber</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>