<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="C:/dev/git/bartender/Buildsoft.Bartender.Business/TradePackagesLifecyle/TradePackageLifecycleService.cs" timestamp="1545178431693">
        <mark key="[" line="93" column="19" />
        <mark key="]" line="93" column="19" />
        <mark key="^" line="93" column="23" />
        <mark key="." line="93" column="19" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/app.component.ts" timestamp="1546867159653">
        <mark key="[" line="9" column="27" />
        <mark key="]" line="9" column="27" />
        <mark key="^" line="9" column="10" />
        <mark key="." line="9" column="27" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/home/home.component.css" timestamp="1546936849964">
        <mark key="[" line="2" column="1" />
        <mark key="]" line="14" column="45" />
        <mark key="^" line="14" column="45" />
        <mark key="." line="14" column="45" />
      </file>
      <file name="C:/dev/git/ngrx-course/shared/to/all-user-data.ts" timestamp="1546866171709">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="0" />
        <mark key="." line="5" column="0" />
        <mark key="^" line="5" column="4" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/assets/chatapp.css" timestamp="1546916817185">
        <mark key="[" line="22" column="7" />
        <mark key="]" line="22" column="10" />
        <mark key="^" line="22" column="10" />
        <mark key="." line="22" column="10" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/message-list/message-list.component.html" timestamp="1546916557159">
        <mark key="[" line="0" column="23" />
        <mark key="]" line="0" column="23" />
        <mark key="^" line="0" column="29" />
        <mark key="." line="0" column="23" />
      </file>
      <file name="C:/dev/git/bartender/BoxMigrationConsole/BoxMigrator.cs" timestamp="1548329042463">
        <mark key="'" line="215" column="19" />
        <mark key="[" line="271" column="17" />
        <mark key="]" line="261" column="26" />
        <mark key="^" line="261" column="26" />
        <mark key="." line="261" column="26" />
      </file>
      <file name="C:/dev/git/bartender/Buildsoft.Bartender.Api/Controllers/TradePackageLifecycle/TradePackageLifecycleController.Query.cs" timestamp="1545179775369">
        <mark key="[" line="40" column="48" />
        <mark key="]" line="39" column="12" />
        <mark key="." line="39" column="12" />
        <mark key="^" line="39" column="13" />
      </file>
      <file name="$USER_HOME$/AppData/Roaming/npm/node_modules/@angular/cli/node_modules/socks/typings/common/util.d.ts" timestamp="1547806602218">
        <mark key="[" line="4" column="45" />
        <mark key="." line="0" column="110" />
      </file>
      <file name="C:/dev/git/reactive-patterns-course-master/reactive-patterns-course-master/src/app/home/home.component.ts" timestamp="1546510909498">
        <mark key="[" line="29" column="4" />
        <mark key="]" line="29" column="3" />
        <mark key="^" line="29" column="3" />
        <mark key="." line="29" column="3" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/home/home.component.css" timestamp="1546765013471">
        <mark key="[" line="7" column="17" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
        <mark key="^" line="7" column="0" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/common/store.service.ts" timestamp="1547935865268">
        <mark key="'" line="50" column="0" />
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="C:/dev/git/reactive-patterns-course-master/reactive-patterns-course-master/src/index.html" timestamp="1546132959951">
        <mark key="[" line="12" column="52" />
        <mark key="]" line="14" column="0" />
        <mark key="^" line="14" column="0" />
        <mark key="." line="14" column="0" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/store/ui-state.ts" timestamp="1546430506173">
        <mark key="[" line="23" column="28" />
        <mark key="]" line="23" column="28" />
        <mark key="." line="23" column="28" />
        <mark key="^" line="23" column="28" />
      </file>
      <file name="$USER_HOME$/Downloads/util_vim_hotkey_0.4.1/viatc.ini" timestamp="1546697858829">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="^" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="/BoxMigrator.cs" timestamp="1548102062868">
        <mark key="'" line="180" column="60" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/services/commonHttpHeaders.ts" timestamp="1546920177384">
        <mark key="[" line="7" column="3" />
        <mark key="]" line="6" column="40" />
        <mark key="^" line="6" column="40" />
        <mark key="." line="6" column="40" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/store/reducers/uiStateReducer.ts" timestamp="1546919531353">
        <mark key="[" line="44" column="23" />
        <mark key="]" line="44" column="23" />
        <mark key="^" line="44" column="29" />
        <mark key="." line="44" column="23" />
      </file>
      <file name="C:/dev/git/ngrx-course/node_modules/@angular-devkit/schematics/src/tree/virtual.js" timestamp="1547006286936">
        <mark key="'" line="16" column="54" />
      </file>
      <file name="C:/AutoHotkey/HotKey.ahk" timestamp="1548468984226">
        <mark key="'" line="125" column="1" />
        <mark key="[" line="157" column="0" />
        <mark key="]" line="157" column="0" />
        <mark key="." line="157" column="0" />
      </file>
      <file name="C:/AutoHotkey/HotKeyMac1.ahk" timestamp="1547008367049">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="13" />
        <mark key="." line="4" column="0" />
        <mark key="^" line="4" column="0" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/thread-section/thread-section.component.ts" timestamp="1547296157335">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="1" column="28" />
        <mark key="]" line="1" column="28" />
        <mark key="^" line="1" column="28" />
        <mark key="." line="1" column="28" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/messages/messages.component.html" timestamp="1546867336397">
        <mark key="[" line="2" column="61" />
        <mark key="]" line="3" column="3" />
        <mark key="^" line="3" column="3" />
        <mark key="." line="3" column="3" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/app.component.css" timestamp="1546917175796">
        <mark key="[" line="14" column="12" />
        <mark key="]" line="14" column="12" />
        <mark key="^" line="14" column="12" />
        <mark key="." line="14" column="12" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/store/effects/server-notifications-effect.service.ts" timestamp="1546869285572">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="20" column="19" />
        <mark key="^" line="20" column="19" />
        <mark key="." line="20" column="19" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/app.component.html" timestamp="1547899848574">
        <mark key="[" line="24" column="33" />
        <mark key="]" line="24" column="41" />
        <mark key="^" line="14" column="20" />
        <mark key="." line="24" column="23" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/user-selection/user-selection.component.html" timestamp="1546931163448">
        <mark key="[" line="4" column="26" />
        <mark key="]" line="4" column="28" />
        <mark key="." line="4" column="28" />
        <mark key="^" line="4" column="28" />
      </file>
      <file name="C:/dev/git/ngrx-course/node_modules/@ngrx/store/src/models.d.ts" timestamp="1546430137014">
        <mark key="[" line="0" column="17" />
        <mark key="]" line="9" column="5" />
        <mark key="^" line="9" column="5" />
        <mark key="." line="9" column="5" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/about/about1.component.ts" timestamp="1546260835912">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="1" />
        <mark key="." line="0" column="1" />
        <mark key="^" line="0" column="1" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/chat-message/chat-message.component.html" timestamp="1546866830787">
        <mark key="[" line="0" column="64" />
        <mark key="]" line="2" column="64" />
        <mark key="^" line="2" column="64" />
        <mark key="." line="2" column="64" />
      </file>
      <file name="C:/dev/git/bartender-lambda/BartenderUserActivityReport/index.js" timestamp="1548329722534">
        <mark key="'" line="825" column="0" />
        <mark key="[" line="825" column="0" />
        <mark key="]" line="936" column="1" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/home/home.component.html" timestamp="1547005019496">
        <mark key="[" line="3" column="33" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
        <mark key="^" line="1" column="0" />
      </file>
      <file name="C:/dev/git/bartender/Buildsoft.Bartender.Api.Model/TradePackagesLifecycle/TradePackageLifecycleSupplierResponse.cs" timestamp="1545178833807">
        <mark key="[" line="20" column="21" />
        <mark key="]" line="20" column="44" />
        <mark key="^" line="20" column="44" />
        <mark key="." line="20" column="44" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/shared/mapping/buildThreadParticipantsList.ts" timestamp="1546405321155">
        <mark key="[" line="11" column="21" />
        <mark key="]" line="11" column="20" />
        <mark key="^" line="11" column="20" />
        <mark key="." line="11" column="20" />
      </file>
      <file name="C:/dev/git/bartender-lambda/.gitignore" timestamp="1548460387563">
        <mark key="[" line="16" column="14" />
        <mark key="]" line="16" column="14" />
        <mark key="^" line="16" column="14" />
        <mark key="." line="16" column="14" />
      </file>
      <file name="C:/dev/git/reactive-patterns-course-master/reactive-patterns-course-master/src/app/course/course.component.html" timestamp="1546176538424">
        <mark key="[" line="16" column="30" />
        <mark key="]" line="16" column="27" />
        <mark key="^" line="16" column="27" />
        <mark key="." line="16" column="27" />
      </file>
      <file name="$USER_HOME$/.ideavimrc" timestamp="1547899925448">
        <mark key="[" line="1" column="5" />
        <mark key="]" line="1" column="18" />
        <mark key="^" line="1" column="18" />
        <mark key="." line="1" column="18" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/home/home.component.ts" timestamp="1547173803119">
        <mark key="[" line="10" column="12" />
        <mark key="]" line="10" column="12" />
        <mark key="." line="10" column="12" />
      </file>
      <file name="C:/dev/git/reactive-patterns-course-master/reactive-patterns-course-master/src/app/all-lessons/all-lessons.component.ts" timestamp="1546179952201">
        <mark key="[" line="13" column="17" />
        <mark key="]" line="13" column="17" />
        <mark key="." line="13" column="17" />
        <mark key="^" line="13" column="17" />
      </file>
      <file name="/Dummy.txt" timestamp="1547174567823">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="0" column="0" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/user-selection/user-selection.component.ts" timestamp="1546918832999">
        <mark key="[" line="17" column="36" />
        <mark key="]" line="17" column="3" />
        <mark key="^" line="17" column="3" />
        <mark key="." line="17" column="3" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/store/effects/write-new-message-effect.service.ts" timestamp="1546869766455">
        <mark key="[" line="22" column="40" />
        <mark key="]" line="22" column="37" />
        <mark key="." line="22" column="37" />
        <mark key="^" line="22" column="37" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/store/actions.ts" timestamp="1547173427272">
        <mark key="[" line="124" column="4" />
        <mark key="]" line="130" column="36" />
        <mark key="." line="130" column="36" />
        <mark key="^" line="130" column="36" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/store/reducers/uiStoreDataReducer.ts" timestamp="1546939534184">
        <mark key="[" line="23" column="52" />
        <mark key="]" line="23" column="51" />
        <mark key="." line="23" column="51" />
        <mark key="^" line="23" column="51" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/model/courses/course.object.ts" timestamp="1546767447661">
        <mark key="[" line="0" column="11" />
        <mark key="]" line="0" column="11" />
        <mark key="^" line="0" column="11" />
        <mark key="." line="0" column="44" />
      </file>
      <file name="C:/dev/git/rxjs-course/server/server.ts" timestamp="1546846522064">
        <mark key="[" line="28" column="12" />
        <mark key="]" line="29" column="91" />
        <mark key="^" line="29" column="91" />
        <mark key="." line="29" column="91" />
      </file>
      <file name="C:/dev/git/bartender/Buildsoft.Bartender.Entities/TradePackagesLifecycle/TradePackageLifecycleSupplier.cs" timestamp="1545178550516">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="14" column="5" />
        <mark key="." line="5" column="7" />
        <mark key="^" line="5" column="7" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/thread-section/thread-section.component.html" timestamp="1547002578175">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
        <mark key="^" line="4" column="0" />
      </file>
      <file name="$USER_HOME$/Pictures/Saved Pictures/2.txt" timestamp="1547887746853">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="^" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="/Web.config" timestamp="1548101705832">
        <mark key="[" line="189" column="30" />
        <mark key="]" line="189" column="30" />
      </file>
      <file name="C:/dev/git/bartender-lambda/BartenderUserActivityReport/Bartender User Report.html" timestamp="1548329331193">
        <mark key="'" line="813" column="46" />
        <mark key="[" line="813" column="46" />
        <mark key="]" line="813" column="61" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/course/course.component.ts" timestamp="1547938307878">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="47" column="0" />
        <mark key="." line="38" column="39" />
        <mark key="^" line="5" column="12" />
      </file>
      <file name="C:/dev/git/rxjs-course/LICENSE" timestamp="1546840939907">
        <mark key="[" line="8" column="14" />
        <mark key="]" line="9" column="23" />
        <mark key="^" line="9" column="23" />
        <mark key="." line="9" column="23" />
      </file>
      <file name="C:/dev/git/reactive-patterns-course-master/reactive-patterns-course-master/src/app/home/home.component.html" timestamp="1546510342495">
        <mark key="[" line="9" column="2" />
        <mark key="]" line="10" column="0" />
        <mark key="^" line="10" column="16" />
        <mark key="." line="8" column="35" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/app-routing.module.ts" timestamp="1546740494172">
        <mark key="[" line="27" column="27" />
        <mark key="]" line="27" column="28" />
        <mark key="^" line="27" column="38" />
        <mark key="." line="27" column="28" />
      </file>
      <file name="C:/AutoHotkey/HotKeyMac.ahk" timestamp="1547173940791">
        <mark key="'" line="73" column="12" />
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="13" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" timestamp="1548487017849">
        <mark key="'" line="1437" column="16" />
        <mark key="[" line="1442" column="33" />
        <mark key="]" line="1442" column="38" />
        <mark key="." line="1442" column="38" />
        <mark key="^" line="1442" column="38" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/message-section/messageParticipantNamesSelector.ts" timestamp="1546405116482">
        <mark key="[" line="7" column="23" />
        <mark key="]" line="7" column="30" />
        <mark key="^" line="7" column="30" />
        <mark key="." line="7" column="30" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/courses-card-list/courses-card-list.component.css" timestamp="1546574983767">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="^" line="18" column="0" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="C:/dev/git/ngrx-course/src/app/store/utils.ts" timestamp="1546997577665">
        <mark key="'" line="31" column="31" />
        <mark key="[" line="30" column="31" />
        <mark key="]" line="26" column="12" />
        <mark key="^" line="26" column="12" />
        <mark key="." line="26" column="12" />
      </file>
      <file name="C:/dev/git/rxjs-course/src/app/common4/store.service.ts" timestamp="1546742934059">
        <mark key="[" line="3" column="23" />
        <mark key="]" line="3" column="19" />
        <mark key="^" line="3" column="19" />
        <mark key="." line="3" column="19" />
      </file>
    </filemarks>
    <jumps>
      <jump line="42" column="0" filename="C:/dev/git/rxjs-course/src/app/course-dialog/course-dialog.component.ts" />
      <jump line="82" column="17" filename="C:/dev/git/rxjs-course/src/app/course-dialog/course-dialog.component.ts" />
      <jump line="88" column="0" filename="C:/dev/git/rxjs-course/src/app/course-dialog/course-dialog.component.ts" />
      <jump line="67" column="35" filename="C:/dev/git/ngrx-course/src/app/store/actions.ts" />
      <jump line="68" column="0" filename="C:/dev/git/ngrx-course/src/app/store/actions.ts" />
      <jump line="33" column="0" filename="C:/dev/git/ngrx-course/src/app/message-list/message-list.component.ts" />
      <jump line="57" column="0" filename="C:/dev/git/ngrx-course/src/app/message-list/message-list.component.ts" />
      <jump line="56" column="1" filename="C:/dev/git/ngrx-course/src/app/store/actions.ts" />
      <jump line="31" column="31" filename="C:/dev/git/ngrx-course/src/app/store/utils.ts" />
      <jump line="1" column="2" filename="C:/dev/git/ngrx-course/src/app/thread-section/thread-section.component.css" />
      <jump line="16" column="54" filename="C:/dev/git/ngrx-course/node_modules/@angular-devkit/schematics/src/tree/virtual.js" />
      <jump line="14" column="17" filename="C:/dev/git/ngrx-course/src/app/home/home.component.ts" />
      <jump line="73" column="12" filename="C:/AutoHotkey/HotKeyMac.ahk" />
      <jump line="40" column="27" filename="C:/dev/git/ngrx-course/src/app/thread-section/thread-section.component.ts" />
      <jump line="0" column="0" filename="C:/dev/git/ngrx-course/src/app/thread-section/thread-section.component.ts" />
      <jump line="15" column="0" filename="C:/dev/git/rxjs-course/src/app/course/course.component.ts" />
      <jump line="30" column="0" filename="C:/dev/git/rxjs-course/src/app/course/course.component.ts" />
      <jump line="13" column="19" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="12" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="14" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="16" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="18" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="21" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="23" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="33" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="37" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="41" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="47" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="60" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="58" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="50" column="0" filename="C:/dev/git/rxjs-course/src/app/common/store.service.ts" />
      <jump line="111" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="114" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="117" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="120" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="123" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="126" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="129" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="132" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="135" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="108" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="180" column="60" filename="/BoxMigrator.cs" />
      <jump line="219" column="63" filename="C:/dev/git/bartender/BoxMigrationConsole/BoxMigrator.cs" />
      <jump line="225" column="0" filename="C:/dev/git/bartender/BoxMigrationConsole/BoxMigrator.cs" />
      <jump line="198" column="20" filename="C:/dev/git/bartender/BoxMigrationConsole/BoxMigrator.cs" />
      <jump line="215" column="19" filename="C:/dev/git/bartender/BoxMigrationConsole/BoxMigrator.cs" />
      <jump line="813" column="46" filename="C:/dev/git/bartender-lambda/BartenderUserActivityReport/Bartender User Report.html" />
      <jump line="825" column="0" filename="C:/dev/git/bartender-lambda/BartenderUserActivityReport/index.js" />
      <jump line="1377" column="4" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="194" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="191" column="4" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="1499" column="13" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="6" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="1540" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="27" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="0" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="32" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="16" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="78" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="110" column="0" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="125" column="1" filename="C:/AutoHotkey/HotKey.ahk" />
      <jump line="25" column="9" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="28" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1542" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1531" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="16" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1545" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1532" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1494" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1453" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1406" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="30" column="9" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="7" column="3" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="29" column="7" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="12" column="8" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="13" column="8" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="11" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="15" column="6" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="14" column="8" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="4" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="37" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="36" column="5" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="41" column="21" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="20" column="4" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="19" column="4" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="10" column="4" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1535" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="5" column="8" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="2" column="4" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="0" column="56" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1526" column="0" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1523" column="9" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1520" column="32" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1524" column="23" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1256" column="8" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1561" column="12" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1558" column="5" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1556" column="23" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="334" column="8" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
      <jump line="1424" column="16" filename="C:/dev/git/bartender-lambda/BartenderQuoteValidator/index.js" />
    </jumps>
    <registers>
      <register name="a" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="94" code="0" mods="0" />
        </keys>
      </register>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkLAogICAgc3RhcnRXaXRoLAogICAgdGFwLAogICAgZGVsYXksCiAgICBtYXAsCiAgICBjb25jYXRNYXAsCiAgICBzd2l0Y2hNYXAsCiAgICB3aXRoTGF0ZXN0RnJvbSwKICAgIGNvbmNhdEFsbCwgc2hhcmVSZXBsYXkKfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CmltcG9ydCB7bWVyZ2UsIGZyb21FdmVudCwgT2JzZXJ2YWJsZSwgY29uY2F0fSBmcm9tICdyeGpzJzsgaW1wb3J0IHtMZXNzb259IGZyb20gJy4uL21vZGVsL2xlc3Nvbic7IGltcG9ydCB7Y3JlYXRlSHR0cE9ic2VydmFibGV9IGZyb20gJy4uL2NvbW1vbi91dGlsJzsgaW1wb3J0IHtTdG9yZX0gZnJvbSAnLi4vY29tbW9uL3N0b3JlLnNlcnZpY2UnOwoKCkBDb21wb25lbnQoewogICAgc2VsZWN0b3I6ICdjb3Vyc2UnLAogICAgdGVtcGxhdGVVcmw6ICcuL2NvdXJzZS5jb21wb25lbnQuaHRtbCcsCiAgICBzdHlsZVVybHM6IFsnLi9jb3Vyc2UuY29tcG9uZW50LmNzcyddCn0pCmV4cG9ydCBjbGFzcyBDb3Vyc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQgewoKICAgIGNvdXJzZUlkOm51bWJlcjsKCiAgICBjb3Vyc2UkIDogT2JzZXJ2YWJsZTxDb3Vyc2U+OwoKICAgIGxlc3NvbnMkOiBPYnNlcnZhYmxlPExlc3NvbltdPjsKCg==</text>
      </register>
      <register name="b" type="4">
        <text>GroupBy</text>
      </register>
      <register name="c" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="d" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="35" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="49" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="94" code="0" mods="0" />
        </keys>
      </register>
      <register name="e" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="35" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="49" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="49" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="f" type="4">
        <text />
      </register>
      <register name="i" type="4">
        <text>tradePackageItem</text>
      </register>
      <register name="j" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="64" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="94" code="0" mods="0" />
        </keys>
      </register>
      <register name="+" type="4">
        <text>sendReport</text>
      </register>
      <register name="l" type="4">
        <text>quoteLifecycleId</text>
      </register>
      <register name="-" type="4">
        <text>aws</text>
      </register>
      <register name="m" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="35" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="94" code="0" mods="0" />
        </keys>
      </register>
      <register name="n" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="35" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="52" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="94" code="0" mods="0" />
        </keys>
      </register>
      <register name="/" type="4">
        <text>scanDb</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICNhYmMxMjMgMTIzdGhvbWFzICAgIGhvc3Q6ICJvbmxpbmUtYXBwcy5jdnI0b3Aza3VlZmwuYXAtc291dGhlYXN0LTIucmRzLmFtYXpvbmF3cy5jb20iLC90aG9tYXMK</text>
      </register>
      <register name="p" type="4">
        <text>public</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgIGZ1bmN0aW9uIHB1c2hSZWNvcmRUb0ZpbGUoKSAK</text>
      </register>
      <register name="2" type="4">
        <text>{
        var request = {
            ACL: 'private',
            Body: JSON.stringify(mismatchData),
            Bucket: 'bartender-prod',
            Key: 'live_stat/total_mismatch_data.json'
        };
        s3.putObject(request, function (err, data) {
            if (err) throw err;
            console.log('Data saved successfully');
        });
    }</text>
      </register>
      <register name="r" type="4">
        <text>Repository</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgIGZ1bmN0aW9uIHB1c2hSZWNvcmRUb0ZpbGUoKSAK</text>
      </register>
      <register name="4" type="4">
        <text encoding="base64">ewogICAgICAgIGNvbnN0IHJlcXVlc3QgPSB7CiAgICAgICAgICAgIEFDTDogJ3ByaXZhdGUnLAogICAgICAgICAgICBCb2R5OiBKU09OLnN0cmluZ2lmeShtaXNtYXRjaERhdGEpLAogICAgICAgICAgICBCdWNrZXQ6ICdiYXJ0ZW5kZXItcHJvZCcsCiAgICAgICAgICAgIEtleTogJ2xpdmVfc3RhdC90b3RhbF9taXNtYXRjaF9kYXRhLmpzb24nCiAgICAgICAgfTsKICAgICAgICBzMy5wdXRPYmplY3QocmVxdWVzdCwgKEVycm9yLCBkYXRhKSA9PiB7CiAgICAgICAgICAgIGlmIChlcnIpIHRocm93IEVycm9yOyAKICAgICAgICB9KTsKICAgICAgICAKICAgIH0=</text>
      </register>
      <register name="t" type="4">
        <text>TradePackag</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">IHMzLnB1dE9iamVjdChyZXF1ZXN0LCAoZXJyLCBkYXRhKSA9PiB7CiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyOwogICAgICAgICAgICBjb25zb2xlLmxvZygnZGF0YSBzYXZlZCBzdWNjZXNzZnVsbHknKQogICAgICAgIH0pCiAgICB9Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">OwogICAgdmFyIGF3cyA9IHJlcXVpcmUoJ2F3cy1zZGsnKTsKICAgIHZhciBjb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHsKICAgICAgICBob3N0OiAib25saW5lLWFwcHMuY3ZyNG9wM2t1ZWZsLmFwLXNvdXRoZWFzdC0yLnJkcy5hbWF6b25hd3MuY29tIiwKICAgICAgICBwb3J0OiAiMzMwNiIsCiAgICAgICAgdXNlcjogImRiYWRtaW4iLAogICAgICAgIHBhc3N3b3JkOiAiUll5aG42UjJoblRTYmFYMiIsCiAgICAgICAgZGF0YWJhc2U6ICJiYXJ0ZW5kZXIiCiAgICB9KTsK</text>
      </register>
      <register name="v" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="35" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="49" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="65535" code="37" mods="130" />
          <key char="65535" code="37" mods="130" />
          <key char="65535" code="37" mods="130" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="7" type="2">
        <text encoding="base64">CiAgICBjb25zdCBrZXkgPSAnYXNkZmFzZGYnOwogICAgY29uc3QgczMgPSBuZXcgYXdzLlMzKHsKICAgICAgICBhY2Nlc3NLZXlJZDonYXNkZicsCiAgICAgICAgc2VjcmVjdEFjY2Vzc0tleTogJ3NhZGZzJwogICAgfSk7Cn0KZXhwb3J0cy5teUhhbmRsZXIgPSAgZnVuY3Rpb24oZXZlbnQsIGNvbnRleHQsIGNhbGxiYWNrKSB7CiAgICBjb25zb2xlLmxvZygnc3RhcnQgQmFydGVuZGVyIFF1b3RlIFZhbGlkYXRvciBGdW5jdGlvbicpOwogICAgdmFyIG15c3FsID0gcmVxdWlyZSgnbXlzcWwnKQo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ZXhwb3J0cy5teUhhbmRsZXIgPSAgZnVuY3Rpb24oZXZlbnQsIGNvbnRleHQsIGNhbGxiYWNrKSAK</text>
      </register>
      <register name="9" type="4">
        <text encoding="base64"></text>
      </register>
      <register name=":" type="4">
        <text>set relativenumber</text>
      </register>
    </registers>
    <search>
      <last-search>scanDb</last-search>
      <last-offset />
      <last-pattern>scanDb</last-pattern>
      <last-replace>Id1</last-replace>
      <last-substitute encoding="base64">XDxob3N0XD4=</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>home</entry>
        <entry>Home</entry>
        <entry encoding="base64">XDw2XD4=</entry>
        <entry>#+</entry>
        <entry encoding="base64">XDxDYW5BZGRUb0FkbWluR3JvdXBcPg==</entry>
        <entry encoding="base64">XDx1c2VyVGFibGVDb250ZW50XD4=</entry>
        <entry encoding="base64">XDx9XD4=</entry>
        <entry encoding="base64">XDwoXD4=</entry>
        <entry encoding="base64">XDwnXD4=</entry>
        <entry>}</entry>
        <entry>2}</entry>
        <entry>reg</entry>
        <entry>:register</entry>
        <entry>:reg</entry>
        <entry>registers</entry>
        <entry>a</entry>
        <entry>&quot;</entry>
        <entry encoding="base64">XDx0aG9tYXN2YXJcPg==</entry>
        <entry encoding="base64">XDxob3N0XD4=</entry>
        <entry>scanDb</entry>
      </history-search>
      <history-cmd>
        <entry>show ln</entry>
        <entry>set ;m</entry>
        <entry>set ln</entry>
        <entry>set nu</entry>
        <entry>set autoindent</entry>
        <entry>autoindent</entry>
        <entry>set noerrorbells</entry>
        <entry>set noerrorbell</entry>
        <entry>set showmode</entry>
        <entry>reg</entry>
        <entry>-16,-8 co.</entry>
        <entry>51,56s/Id/Id1/gc</entry>
        <entry encoding="base64">bWFwIA==</entry>
        <entry>nnoremap S diw&quot;0P</entry>
        <entry>wq</entry>
        <entry>w</entry>
        <entry>set showrelativenumber</entry>
        <entry>show number</entry>
        <entry>set number</entry>
        <entry>set relativenumber</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>